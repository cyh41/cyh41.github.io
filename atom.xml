<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>south-park</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cyh41.github.io/"/>
  <updated>2019-08-23T08:13:59.490Z</updated>
  <id>https://cyh41.github.io/</id>
  
  <author>
    <name>cyh41</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://cyh41.github.io/2019/08/22/$attrs/"/>
    <id>https://cyh41.github.io/2019/08/22/$attrs/</id>
    <published>2019-08-22T01:53:59.803Z</published>
    <updated>2019-08-23T08:13:59.490Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/08/22/$attrs/78876b0a7262847ad6433024c01fc9ba.jpg" alt="78876b0a7262847ad6433024c01fc9ba"></p><h2 id="preface"><a class="markdownIt-Anchor" href="#preface"></a> Preface</h2><p>在我们日常通信中，prop，基本可以满足业务场景中父子通信的情况。但在高级组件中，比如自己写的通用组件，二次封装element等UI框架等场景，attrs和listeners就大有作为了。</p><h2 id="basics"><a class="markdownIt-Anchor" href="#basics"></a> Basics</h2><ul><li><strong>Code</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- China.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"China"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">HongKong</span> <span class="attr">where</span>=<span class="string">"China"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:money</span>=<span class="string">"100"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HongKong.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"HongKong"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      Hongkong is part of &#123;&#123;where&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      show me the money:&#123;&#123;money&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"HongKong"</span>,</span></span><br><span class="line"><span class="actionscript">  props: [<span class="string">"where"</span>]</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>devTools</strong></li></ul><p><img src="/2019/08/22/$attrs/image-20190823103936036.png" alt="image-20190823103936036"></p><ul><li><p><strong>Rendering</strong></p><p><img src="/2019/08/22/$attrs/image-20190823103419658.png" alt="image-20190823103419658"></p></li></ul><blockquote><p>图中 Mustache语法<code>money</code>未在实例中找到该属性的声明，会报<code>Property or method &quot;money&quot; is not defined on the instance but referenced during render</code>错误。请确定<strong>声明</strong>后再使用。</p></blockquote><p>可以看到，父组件 传递的属性未在 子组件<code>props</code>中声明，则会默认挂载至子组件根元素上。</p><p>这是因为：未在子组件<code>props</code>中声明的属性，会被作为普通的HTML特性应用在子组件的根元素上。可以通过配置子组件<code>inheritAttrs:false</code>（2.4.0 新增）将默认行为去掉（即，在根元素中不会挂载继承属性）。但无论是否配置<code>inheritAttrs</code>，都可以通实例属性<code>$attrs</code>（2.4.0 新增）获取到。</p><blockquote><p>该属性不影响<code>class</code>和<code>style</code>。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HongKong</span></span><br><span class="line">created()&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.$attrs)<span class="comment">//&#123;money:100&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scene"><a class="markdownIt-Anchor" href="#scene"></a> Scene</h2><p>当我们自行封装一个简易的<code>input</code>组件，在使用过程中，可能传入不同的多个原生属性。</p><ul><li>传统<code>props</code>写法：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- box.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">:for</span>=<span class="string">"name"</span>&gt;</span>&#123;&#123;label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:type</span>=<span class="string">"type"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:value</span>=<span class="string">"value"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:name</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:placeholder</span>=<span class="string">"placeholder"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ElInput <span class="keyword">from</span> <span class="string">"@/components/input.vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    ElInput</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      label: <span class="string">"姓名"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//要传入组件的属性</span></span></span><br><span class="line"><span class="actionscript">      name: <span class="string">"name"</span>,</span></span><br><span class="line"><span class="actionscript">      type: <span class="string">"text"</span>,</span></span><br><span class="line"><span class="actionscript">      value: <span class="string">"妮可基德曼"</span>,</span></span><br><span class="line"><span class="actionscript">      placeholder: <span class="string">"请输入姓名"</span></span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">clas</span>=<span class="string">"el-input"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:type</span>=<span class="string">"type"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:value</span>=<span class="string">"value"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:name</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:placeholder</span>=<span class="string">"placeholder"</span></span></span><br><span class="line"><span class="tag">           @<span class="attr">input</span>=<span class="string">"handleInput"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"ElInput"</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  props: [<span class="string">"name"</span>, <span class="string">"type"</span>, <span class="string">"value"</span>, <span class="string">"placeholder"</span>],</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    handleInput(event) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$emit(<span class="string">"input"</span>, event.target.value);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>$attrs</code>方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- box.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">:for</span>=<span class="string">"inputConfig.name"</span>&gt;</span>&#123;&#123;label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-bind</span>=<span class="string">"inputConfig"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">"value"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ElInput <span class="keyword">from</span> <span class="string">"@/components/input.vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    ElInput</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      label: <span class="string">"姓名"</span>,</span></span><br><span class="line"><span class="actionscript">      value: <span class="string">"nas"</span>,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      inputConfig: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//要传入组件的属性</span></span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"name"</span>,</span></span><br><span class="line"><span class="actionscript">        type: <span class="string">"text"</span>,</span></span><br><span class="line"><span class="actionscript">        placeholder: <span class="string">"请输入姓名"</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- input.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">clas</span>=<span class="string">"el-input"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">v-bind</span>=<span class="string">"$attrs"</span></span></span><br><span class="line"><span class="tag">           @<span class="attr">input</span>=<span class="string">"handleInput"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"ElInput"</span>,</span></span><br><span class="line"><span class="actionscript">  inheritAttrs: <span class="literal">false</span>,<span class="comment">//不加这条规则，$attrs会默认挂载到根元素上</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    handleInput(event) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$emit(<span class="string">"input"</span>, event.target.value);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>很明显的，<code>$attrs</code>减少了不少的代码量，整体看起来确实优雅很多，虽说<code>$attrs</code>可以代替<code>props</code>，但<code>$attrs</code>更适合原生属性或不需要处理的属性。 在很多场景下，比如要对属性进行校验、默认值、处理等操作，更建议使用<code>props</code>。每个属性都有它存在的意义，合理的运用不同属性应对不同的场景，才能发挥其最大作用。</p></blockquote><h2 id="others"><a class="markdownIt-Anchor" href="#others"></a> Others</h2><ul><li>Lifecycle</li></ul><p><code>$attrs</code>可访问的阶段是 <code>beforeCreate</code>，而<code>props</code>访问阶段为<code>created</code>。</p><ul><li><p>Render Function &amp; JSX</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//input.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'ElInput'</span>,</span><br><span class="line"></span><br><span class="line">  inheritAttrs: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  render(h) &#123;</span><br><span class="line">    <span class="comment">//<span class="doctag">TODO:</span>这里放jsx或render function</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleInput(event) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">'input'</span>, event.target.value);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//render写法</span></span><br><span class="line">  render(h) &#123;</span><br><span class="line">    <span class="keyword">return</span> h(<span class="string">'div'</span>, &#123;</span><br><span class="line">      class: 'el-input',</span><br><span class="line">    &#125;, [</span><br><span class="line">      h(<span class="string">'input'</span>, &#123;</span><br><span class="line">        <span class="comment">//绑定在attrs上</span></span><br><span class="line">        attrs: <span class="keyword">this</span>.$attrs,</span><br><span class="line"></span><br><span class="line">        on: &#123;</span><br><span class="line">          input: <span class="keyword">this</span>.handleInput,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    ]);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//jsx写法  </span></span><br><span class="line">render(h) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"el-input"</span>&gt;</span></span></span><br><span class="line">      &lt;input attrs=&#123;this.$attrs&#125; on-input=&#123;this.handleInput&#125; /&gt;</span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br></pre></td></tr></table></figure></li><li><p>若 <code>v-bind=“$attrs”</code> 中的某个属性 已经有声明，则原生属性的优先级更高。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $attrs为&#123;type:"text"&#125;，最后生效的为type="number" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-bind</span>=<span class="string">"$attrs"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/08/22/$attrs/78876b0a7262847ad6433024c01fc9ba.jpg&quot; alt=&quot;78876b0a7262847ad6433024c01fc9ba&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;preface&quot;&gt;&lt;a class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>What&#39;s up Vue -属性-props</title>
    <link href="https://cyh41.github.io/2019/04/23/What-s-up-Vue-%E5%B1%9E%E6%80%A7-props/"/>
    <id>https://cyh41.github.io/2019/04/23/What-s-up-Vue-属性-props/</id>
    <published>2019-04-23T11:11:51.000Z</published>
    <updated>2019-07-24T13:21:41.741Z</updated>
    
    <content type="html"><![CDATA[<h2 id="preface"><a class="markdownIt-Anchor" href="#preface"></a> preface</h2><p>首先要非常明确的说明，<code>Vue</code>是<strong>单向数据流</strong>，不是双向绑定，所谓的双向绑定仅仅只是个语法糖而已。<code>prop</code>只是形成一个 <strong>单向下行绑定</strong>（父级prop的更新会向下流动到子组件中，但反过来则不行）。</p><p>如果需要将这个值作为本地的<code>prop</code>数据来使用。最好定义一个本地的<code>data</code>或<code>computed</code>来使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">props:[<span class="string">'initialCounter'</span>],</span><br><span class="line">  data()&#123;</span><br><span class="line">  <span class="keyword">return</span>&#123;</span><br><span class="line">    counter: <span class="keyword">this</span>.initialCounter</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">props: [<span class="string">'size'</span>],</span><br><span class="line">computed: &#123;</span><br><span class="line">  normalizedSize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.size.trim().toLowerCase()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，<code>JavaScript</code> 中对象和数组是通过引用传入的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">initialObj = &#123;</span></span><br><span class="line"><span class="comment">name:'shit'</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">props: [<span class="string">'initialObj'</span>],</span><br><span class="line">  created()&#123;</span><br><span class="line">  <span class="keyword">this</span>.obj.name = <span class="string">'asshole'</span><span class="comment">//虽然修改的obj.name，但是initialObj.name同样会改变</span></span><br><span class="line">&#125;,</span><br><span class="line">data()&#123;</span><br><span class="line">  <span class="keyword">return</span>&#123;</span><br><span class="line">   obj : <span class="keyword">this</span>.initialObj</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;preface&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#preface&quot;&gt;&lt;/a&gt; preface&lt;/h2&gt;
&lt;p&gt;首先要非常明确的说明，&lt;code&gt;Vue&lt;/code&gt;是&lt;strong&gt;单向数据流&lt;/strong&gt;，不是双向绑定
      
    
    </summary>
    
      <category term="frontEnd" scheme="https://cyh41.github.io/categories/frontEnd/"/>
    
    
      <category term="vue" scheme="https://cyh41.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>What&#39;s up Vue -属性-attrs</title>
    <link href="https://cyh41.github.io/2019/04/20/What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/"/>
    <id>https://cyh41.github.io/2019/04/20/What-s-up-Vue-属性-attrs/</id>
    <published>2019-04-20T09:16:01.000Z</published>
    <updated>2019-07-23T11:52:13.015Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/04/20/What-s-up-Vue-属性-attrs/../What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/fallout_4.jpg" alt="fallout_4"></p><h2 id="preface"><a class="markdownIt-Anchor" href="#preface"></a> preface</h2><p>在讲 <code>attrs</code> 之前，先简单介绍一下 组件的三大核心概念。</p><p>分别是：<strong>属性</strong>、<strong>事件</strong>、<strong>插槽</strong>。</p><p>这三大核心概念是vue组件的支撑，我会作为这个系列的第一个重点来讲，并且会在后面详细介绍。</p><p>这篇主要就是讲解一下 **属性 **中的 <code>attrs</code>。</p><blockquote><p>文中代码基本上只展示关键部分</p></blockquote><h2 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h2><p>首先 <code>vue</code>当中，属性分为了三类</p><ol><li>自定义属性<code>props</code>，常用于父子组件之前的通信</li><li>原生属性<code>attrs</code>，属于 当子组件没有接收（<code>props</code>中没声明）其属性，则该属性会自动挂载到组件根元素上</li><li>特殊属性不多说了吧</li></ol><p><img src="https://static001.geekbang.org/resource/image/78/ba/78876b0a7262847ad6433024c01fc9ba.jpeg" alt="属性三大组成"></p><ul><li><h3 id="attrs原生属性"><a class="markdownIt-Anchor" href="#attrs原生属性"></a> Attrs（原生属性）</h3><h4 id="inheritattrs"><a class="markdownIt-Anchor" href="#inheritattrs"></a> <a href="https://cn.vuejs.org/v2/api/#inheritAttrs" target="_blank" rel="noopener">inheritAttrs</a></h4><blockquote><p>默认情况下</p><p>父组件传递个属性给子组件</p><p>子组件中未在<code>props</code>中声明该属性，同时不设置 <code>inheritAttrs</code>到<code>false</code></p><p>该属性则作为普通的 HTML 特性 应用在子组件的根元素上</p></blockquote><p>话不多B，直接上code</p><ul><li><strong>父组件</strong>在 子组件上加了一个 自定义属性 <code>text</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 子组件child-component --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child-component</span> <span class="attr">text</span>=<span class="string">"inheritAttrs默认为true"</span> <span class="attr">class</span>=<span class="string">"parent-class"</span> <span class="attr">:style</span>=<span class="string">"&#123;color:'#000'&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">child-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ChildComponent <span class="keyword">from</span> <span class="string">"@/components/ChildComponent.vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">name: <span class="string">"parentComponent"</span>,</span></span><br><span class="line"><span class="undefined">components: &#123;</span></span><br><span class="line"><span class="undefined">    ChildComponent</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>子组件</strong>内部没有用<code>props</code>声明该属性，同时<code>inheritAttrs</code>不为<code>false</code>。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    我是子组件</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"ChildComponent"</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// inheritAttrs:true,</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// props:&#123;&#125;</span></span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>默认<code>inheritAttrs</code>，或<code>inheritAttrs</code>为<code>true</code></li></ul><p><img src="/2019/04/20/What-s-up-Vue-属性-attrs/../What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/image-20190721163039044.png" alt="image-20190721163039044"></p><ul><li><code>inheritAttrs</code>为<code>false</code>，text属性不见了，class跟style依然挂载</li></ul><p><img src="/2019/04/20/What-s-up-Vue-属性-attrs/../What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/image-20190721163056529.png" alt="image-20190721163056529"></p><ul><li>虽然<code>inheritAttrs:false</code>阻止了 <strong>原生属性默认挂载在跟元素上的特性</strong>（非 <code>class</code> 和 <code>style</code> ），但是我们依然可以通过<a href="https://cn.vuejs.org/v2/api/#vm-attrs" target="_blank" rel="noopener">vm.$attrs</a> 这个实例属性去访问到（访问不到<code>class</code>和<code>style</code>）。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--省略html--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"childComponent"</span></span></span><br><span class="line"><span class="actionscript">  inheritAttrs:<span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// props:&#123;&#125;</span></span></span><br><span class="line"><span class="undefined">  create()&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">//可以直接访问得到所有的原生属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$attrs)</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/04/20/What-s-up-Vue-属性-attrs/../What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/image-20190721145031415.png" alt="image-20190721145031415"></p><blockquote><p>简单来说<code>inheritAttrs:false</code>可以<strong>避免通信的数据直接暴露在html上</strong>，而<code>$attrs</code>的妙用不仅仅如此</p></blockquote><h4 id="场景实例"><a class="markdownIt-Anchor" href="#场景实例"></a> 场景实例</h4><p>有这么一个场景（父=&gt;子=&gt;孙的通信），你需要通过修改父组件的属性去更新孙组件。这里是需  要把<code>input</code>的类型改为 <code>button</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子组件child-component --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child-component</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;/<span class="name">child-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--省略script--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 孙组件grand-component --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">grand-component</span>&gt;</span><span class="tag">&lt;/<span class="name">grand-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--省略script--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--孙组件 孙子孙女,whatever--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">vlaue</span>=<span class="string">"我其实是一个按钮"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--省略script--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="props方法"><a class="markdownIt-Anchor" href="#props方法"></a> Props方法</h4><ul><li>层层传递法，每层用props接收。</li></ul> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 传递type给孙组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">grand-component</span> <span class="attr">:type</span>=<span class="string">"type"</span>&gt;</span><span class="tag">&lt;/<span class="name">grand-component</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">     props:&#123;</span></span><br><span class="line"><span class="actionscript">       <span class="comment">//接收 父组件传递的属性type</span></span></span><br><span class="line"><span class="javascript">       type:<span class="built_in">String</span></span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="undefined">   &#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--孙组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 祖父传的type，经过重重传递，终于传过来了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">:type</span>=<span class="string">"type"</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">     props:&#123;</span></span><br><span class="line"><span class="actionscript">       <span class="comment">//接收 子组件（这里是父组件）接收父组件（这里是祖父组件）传递的type，是不是晕了？晕就对了，这才跨了一层，如果跨N层呢？</span></span></span><br><span class="line"><span class="javascript">       type:<span class="built_in">String</span></span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="undefined">   &#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="attrs方法"><a class="markdownIt-Anchor" href="#attrs方法"></a> $attrs方法</h4><ul><li>只需在中间层配置</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 将$attrs直接传递给孙组件，我甚至不需要知道$attrs里面有什么 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">grand-component</span> <span class="attr">v-bind</span>=<span class="string">"$attrs"</span>&gt;</span><span class="tag">&lt;/<span class="name">grand-component</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">     inheritAttrs:<span class="literal">false</span>, <span class="comment">//我不希望html里面有我的数据</span></span></span><br><span class="line"><span class="actionscript">     <span class="comment">//props:&#123;&#125;  不需要props了</span></span></span><br><span class="line"><span class="undefined">   &#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ok，就这样了，孙组件不用改动，就可以直接生效。虽然说两种方法都能解决跨组件通信，但是明显 <code>$attrs</code> 代码量少、维护性更高。</p><blockquote><p><code>$attrs</code>这里有几个地方需要注意：<br>1.当孙组件中已经拥有了该属性，会被祖父传递的属性覆盖<br>2.<code>class</code>和<code>style</code>依然无效，不能通过此方法给孙子传递<br>3.不能将 <code>v-bind=&quot;$attrs&quot;</code>缩写为<code>:$attrs</code><br>4.<code>$attrs</code>的应用场景不多，仅限于应用在子组件的<strong>根</strong>元素上</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/04/20/What-s-up-Vue-属性-attrs/../What-s-up-Vue-%E5%B1%9E%E6%80%A7-attrs/fallout_4.jpg&quot; alt=&quot;fallout_4&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;prefac
      
    
    </summary>
    
      <category term="frontEnd" scheme="https://cyh41.github.io/categories/frontEnd/"/>
    
    
      <category term="vue" scheme="https://cyh41.github.io/tags/vue/"/>
    
  </entry>
  
</feed>
